/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Vapi from "../index.mjs";
export interface GoogleModel {
    /** This is the starting state for the conversation. */
    messages?: Vapi.OpenAiMessage[];
    /**
     * These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.
     *
     * Both `tools` and `toolIds` can be used together.
     */
    tools?: GoogleModel.Tools.Item[];
    /**
     * These are the tools that the assistant can use during the call. To use transient tools, use `tools`.
     *
     * Both `tools` and `toolIds` can be used together.
     */
    toolIds?: string[];
    /** These are the options for the knowledge base. */
    knowledgeBase?: Vapi.CreateCustomKnowledgeBaseDto;
    /** This is the ID of the knowledge base the model will use. */
    knowledgeBaseId?: string;
    /** This is the Google model that will be used. */
    model: GoogleModel.Model;
    provider: "google";
    /**
     * This is the session configuration for the Gemini Flash 2.0 Multimodal Live API.
     * Only applicable if the model `gemini-2.0-flash-realtime-exp` is selected.
     */
    realtimeConfig?: Vapi.GoogleRealtimeConfig;
    /** This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency. */
    temperature?: number;
    /** This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250. */
    maxTokens?: number;
    /**
     * This determines whether we detect user's emotion while they speak and send it as an additional info to model.
     *
     * Default `false` because the model is usually are good at understanding the user's emotion from text.
     *
     * @default false
     */
    emotionRecognitionEnabled?: boolean;
    /**
     * This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.
     *
     * Default is 0.
     *
     * @default 0
     */
    numFastTurns?: number;
}
export declare namespace GoogleModel {
    type Tools = Tools.Item[];
    namespace Tools {
        type Item = Vapi.CreateApiRequestToolDto | Vapi.CreateBashToolDto | Vapi.CreateComputerToolDto | Vapi.CreateDtmfToolDto | Vapi.CreateEndCallToolDto | Vapi.CreateFunctionToolDto | Vapi.CreateGoHighLevelCalendarAvailabilityToolDto | Vapi.CreateGoHighLevelCalendarEventCreateToolDto | Vapi.CreateGoHighLevelContactCreateToolDto | Vapi.CreateGoHighLevelContactGetToolDto | Vapi.CreateGoogleCalendarCheckAvailabilityToolDto | Vapi.CreateGoogleCalendarCreateEventToolDto | Vapi.CreateGoogleSheetsRowAppendToolDto | Vapi.CreateMcpToolDto | Vapi.CreateQueryToolDto | Vapi.CreateSlackSendMessageToolDto | Vapi.CreateSmsToolDto | Vapi.CreateTextEditorToolDto | Vapi.CreateTransferCallToolDto;
    }
    /**
     * This is the Google model that will be used.
     */
    type Model = "gemini-2.5-pro" | "gemini-2.5-flash" | "gemini-2.5-flash-lite" | "gemini-2.5-pro-preview-05-06" | "gemini-2.5-flash-preview-05-20" | "gemini-2.5-flash-preview-04-17" | "gemini-2.0-flash-thinking-exp" | "gemini-2.0-pro-exp-02-05" | "gemini-2.0-flash" | "gemini-2.0-flash-lite" | "gemini-2.0-flash-lite-preview-02-05" | "gemini-2.0-flash-exp" | "gemini-2.0-flash-realtime-exp" | "gemini-1.5-flash" | "gemini-1.5-flash-002" | "gemini-1.5-pro" | "gemini-1.5-pro-002" | "gemini-1.0-pro";
    const Model: {
        readonly Gemini25Pro: "gemini-2.5-pro";
        readonly Gemini25Flash: "gemini-2.5-flash";
        readonly Gemini25FlashLite: "gemini-2.5-flash-lite";
        readonly Gemini25ProPreview0506: "gemini-2.5-pro-preview-05-06";
        readonly Gemini25FlashPreview0520: "gemini-2.5-flash-preview-05-20";
        readonly Gemini25FlashPreview0417: "gemini-2.5-flash-preview-04-17";
        readonly Gemini20FlashThinkingExp: "gemini-2.0-flash-thinking-exp";
        readonly Gemini20ProExp0205: "gemini-2.0-pro-exp-02-05";
        readonly Gemini20Flash: "gemini-2.0-flash";
        readonly Gemini20FlashLite: "gemini-2.0-flash-lite";
        readonly Gemini20FlashLitePreview0205: "gemini-2.0-flash-lite-preview-02-05";
        readonly Gemini20FlashExp: "gemini-2.0-flash-exp";
        readonly Gemini20FlashRealtimeExp: "gemini-2.0-flash-realtime-exp";
        readonly Gemini15Flash: "gemini-1.5-flash";
        readonly Gemini15Flash002: "gemini-1.5-flash-002";
        readonly Gemini15Pro: "gemini-1.5-pro";
        readonly Gemini15Pro002: "gemini-1.5-pro-002";
        readonly Gemini10Pro: "gemini-1.0-pro";
    };
}
