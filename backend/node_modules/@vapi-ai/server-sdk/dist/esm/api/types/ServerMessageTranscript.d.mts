/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Vapi from "../index.mjs";
export interface ServerMessageTranscript {
    /** This is the phone number that the message is associated with. */
    phoneNumber?: ServerMessageTranscript.PhoneNumber;
    /** This is the type of the message. "transcript" is sent as transcriber outputs partial or final transcript. */
    type: ServerMessageTranscript.Type;
    /** This is the timestamp of the message. */
    timestamp?: number;
    /**
     * This is a live version of the `call.artifact`.
     *
     * This matches what is stored on `call.artifact` after the call.
     */
    artifact?: Vapi.Artifact;
    /** This is the assistant that the message is associated with. */
    assistant?: Vapi.CreateAssistantDto;
    /** This is the customer that the message is associated with. */
    customer?: Vapi.CreateCustomerDto;
    /** This is the call that the message is associated with. */
    call?: Vapi.Call;
    /** This is the chat object. */
    chat?: Vapi.Chat;
    /** This is the role for which the transcript is for. */
    role: ServerMessageTranscript.Role;
    /** This is the type of the transcript. */
    transcriptType: ServerMessageTranscript.TranscriptType;
    /** This is the transcript content. */
    transcript: string;
}
export declare namespace ServerMessageTranscript {
    /**
     * This is the phone number that the message is associated with.
     */
    type PhoneNumber = Vapi.CreateByoPhoneNumberDto | Vapi.CreateTwilioPhoneNumberDto | Vapi.CreateVonagePhoneNumberDto | Vapi.CreateVapiPhoneNumberDto | Vapi.CreateTelnyxPhoneNumberDto;
    /**
     * This is the type of the message. "transcript" is sent as transcriber outputs partial or final transcript.
     */
    type Type = "transcript" | 'transcript[transcriptType="final"]';
    const Type: {
        readonly Transcript: "transcript";
        readonly TranscriptTranscriptTypeFinal: "transcript[transcriptType=\"final\"]";
    };
    /**
     * This is the role for which the transcript is for.
     */
    type Role = "assistant" | "user";
    const Role: {
        readonly Assistant: "assistant";
        readonly User: "user";
    };
    /**
     * This is the type of the transcript.
     */
    type TranscriptType = "partial" | "final";
    const TranscriptType: {
        readonly Partial: "partial";
        readonly Final: "final";
    };
}
