/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Vapi from "../index.mjs";
export interface Log {
    /** This is the timestamp at which the log was written. */
    time: string;
    /** This is the unique identifier for the org that this log belongs to. */
    orgId: string;
    /** This is the type of the log. */
    type: Log.Type;
    /** This is the type of the webhook, given the log is from a webhook. */
    webhookType?: string;
    /** This is the specific resource, relevant only to API logs. */
    resource?: Log.Resource;
    /** 'This is how long the request took. */
    requestDurationSeconds?: number;
    /** This is the timestamp at which the request began. */
    requestStartedAt?: string;
    /** This is the timestamp at which the request finished. */
    requestFinishedAt?: string;
    /** This is the body of the request. */
    requestBody?: Record<string, unknown>;
    /** This is the request method. */
    requestHttpMethod?: Log.RequestHttpMethod;
    /** This is the request URL. */
    requestUrl?: string;
    /** This is the request path. */
    requestPath?: string;
    /** This is the request query. */
    requestQuery?: string;
    /** This the HTTP status code of the response. */
    responseHttpCode?: number;
    /** This is the request IP address. */
    requestIpAddress?: string;
    /** This is the origin of the request */
    requestOrigin?: string;
    /** This is the body of the response. */
    responseBody?: Record<string, unknown>;
    /** These are the headers of the request. */
    requestHeaders?: Record<string, unknown>;
    /** This is the error, if one occurred. */
    error?: Vapi.Error_;
    /** This is the ID of the assistant. */
    assistantId?: string;
    /** This is the ID of the phone number. */
    phoneNumberId?: string;
    /** This is the ID of the customer. */
    customerId?: string;
    /** This is the ID of the squad. */
    squadId?: string;
    /** This is the ID of the call. */
    callId?: string;
}
export declare namespace Log {
    /**
     * This is the type of the log.
     */
    type Type = "API" | "Webhook" | "Call" | "Provider";
    const Type: {
        readonly Api: "API";
        readonly Webhook: "Webhook";
        readonly Call: "Call";
        readonly Provider: "Provider";
    };
    /**
     * This is the specific resource, relevant only to API logs.
     */
    type Resource = "org" | "assistant" | "analytics" | "credential" | "phone-number" | "block" | "voice-library" | "provider" | "tool" | "token" | "template" | "squad" | "call" | "file" | "metric" | "log";
    const Resource: {
        readonly Org: "org";
        readonly Assistant: "assistant";
        readonly Analytics: "analytics";
        readonly Credential: "credential";
        readonly PhoneNumber: "phone-number";
        readonly Block: "block";
        readonly VoiceLibrary: "voice-library";
        readonly Provider: "provider";
        readonly Tool: "tool";
        readonly Token: "token";
        readonly Template: "template";
        readonly Squad: "squad";
        readonly Call: "call";
        readonly File: "file";
        readonly Metric: "metric";
        readonly Log: "log";
    };
    /**
     * This is the request method.
     */
    type RequestHttpMethod = "POST" | "GET" | "PUT" | "PATCH" | "DELETE";
    const RequestHttpMethod: {
        readonly Post: "POST";
        readonly Get: "GET";
        readonly Put: "PUT";
        readonly Patch: "PATCH";
        readonly Delete: "DELETE";
    };
}
