/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Vapi from "../index.mjs";
export interface DeepgramVoice {
    /** This is the flag to toggle voice caching for the assistant. */
    cachingEnabled?: boolean;
    /** This is the voice provider that will be used. */
    provider: "deepgram";
    /** This is the provider-specific ID that will be used. */
    voiceId: DeepgramVoice.VoiceId;
    /** This is the model that will be used. Defaults to 'aura-2' when not specified. */
    model?: DeepgramVoice.Model;
    /**
     * If set to true, this will add mip_opt_out=true as a query parameter of all API requests. See https://developers.deepgram.com/docs/the-deepgram-model-improvement-partnership-program#want-to-opt-out
     *
     * This will only be used if you are using your own Deepgram API key.
     *
     * @default false
     */
    mipOptOut?: boolean;
    /** This is the plan for chunking the model output before it is sent to the voice provider. */
    chunkPlan?: Vapi.ChunkPlan;
    /** This is the plan for voice provider fallbacks in the event that the primary voice provider fails. */
    fallbackPlan?: Vapi.FallbackPlan;
}
export declare namespace DeepgramVoice {
    /**
     * This is the provider-specific ID that will be used.
     */
    type VoiceId = "asteria" | "luna" | "stella" | "athena" | "hera" | "orion" | "arcas" | "perseus" | "angus" | "orpheus" | "helios" | "zeus" | "thalia" | "andromeda" | "helena" | "apollo" | "aries" | "amalthea" | "atlas" | "aurora" | "callista" | "cora" | "cordelia" | "delia" | "draco" | "electra" | "harmonia" | "hermes" | "hyperion" | "iris" | "janus" | "juno" | "jupiter" | "mars" | "minerva" | "neptune" | "odysseus" | "ophelia" | "pandora" | "phoebe" | "pluto" | "saturn" | "selene" | "theia" | "vesta";
    const VoiceId: {
        readonly Asteria: "asteria";
        readonly Luna: "luna";
        readonly Stella: "stella";
        readonly Athena: "athena";
        readonly Hera: "hera";
        readonly Orion: "orion";
        readonly Arcas: "arcas";
        readonly Perseus: "perseus";
        readonly Angus: "angus";
        readonly Orpheus: "orpheus";
        readonly Helios: "helios";
        readonly Zeus: "zeus";
        readonly Thalia: "thalia";
        readonly Andromeda: "andromeda";
        readonly Helena: "helena";
        readonly Apollo: "apollo";
        readonly Aries: "aries";
        readonly Amalthea: "amalthea";
        readonly Atlas: "atlas";
        readonly Aurora: "aurora";
        readonly Callista: "callista";
        readonly Cora: "cora";
        readonly Cordelia: "cordelia";
        readonly Delia: "delia";
        readonly Draco: "draco";
        readonly Electra: "electra";
        readonly Harmonia: "harmonia";
        readonly Hermes: "hermes";
        readonly Hyperion: "hyperion";
        readonly Iris: "iris";
        readonly Janus: "janus";
        readonly Juno: "juno";
        readonly Jupiter: "jupiter";
        readonly Mars: "mars";
        readonly Minerva: "minerva";
        readonly Neptune: "neptune";
        readonly Odysseus: "odysseus";
        readonly Ophelia: "ophelia";
        readonly Pandora: "pandora";
        readonly Phoebe: "phoebe";
        readonly Pluto: "pluto";
        readonly Saturn: "saturn";
        readonly Selene: "selene";
        readonly Theia: "theia";
        readonly Vesta: "vesta";
    };
    /**
     * This is the model that will be used. Defaults to 'aura-2' when not specified.
     */
    type Model = "aura" | "aura-2";
    const Model: {
        readonly Aura: "aura";
        readonly Aura2: "aura-2";
    };
}
