/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface CartesiaExperimentalControls {
    speed?: CartesiaExperimentalControls.Speed;
    emotion?: CartesiaExperimentalControls.Emotion;
}
export declare namespace CartesiaExperimentalControls {
    type Speed = ("slowest" | "slow" | "normal" | "fast" | "fastest") | number;
    type Emotion = "anger:lowest" | "anger:low" | "anger:high" | "anger:highest" | "positivity:lowest" | "positivity:low" | "positivity:high" | "positivity:highest" | "surprise:lowest" | "surprise:low" | "surprise:high" | "surprise:highest" | "sadness:lowest" | "sadness:low" | "sadness:high" | "sadness:highest" | "curiosity:lowest" | "curiosity:low" | "curiosity:high" | "curiosity:highest";
    const Emotion: {
        readonly AngerLowest: "anger:lowest";
        readonly AngerLow: "anger:low";
        readonly AngerHigh: "anger:high";
        readonly AngerHighest: "anger:highest";
        readonly PositivityLowest: "positivity:lowest";
        readonly PositivityLow: "positivity:low";
        readonly PositivityHigh: "positivity:high";
        readonly PositivityHighest: "positivity:highest";
        readonly SurpriseLowest: "surprise:lowest";
        readonly SurpriseLow: "surprise:low";
        readonly SurpriseHigh: "surprise:high";
        readonly SurpriseHighest: "surprise:highest";
        readonly SadnessLowest: "sadness:lowest";
        readonly SadnessLow: "sadness:low";
        readonly SadnessHigh: "sadness:high";
        readonly SadnessHighest: "sadness:highest";
        readonly CuriosityLowest: "curiosity:lowest";
        readonly CuriosityLow: "curiosity:low";
        readonly CuriosityHigh: "curiosity:high";
        readonly CuriosityHighest: "curiosity:highest";
    };
}
