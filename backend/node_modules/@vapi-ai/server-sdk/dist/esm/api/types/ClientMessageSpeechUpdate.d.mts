/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Vapi from "../index.mjs";
export interface ClientMessageSpeechUpdate {
    /** This is the phone number that the message is associated with. */
    phoneNumber?: ClientMessageSpeechUpdate.PhoneNumber;
    /** This is the type of the message. "speech-update" is sent whenever assistant or user start or stop speaking. */
    type: "speech-update";
    /** This is the status of the speech update. */
    status: ClientMessageSpeechUpdate.Status;
    /** This is the role which the speech update is for. */
    role: ClientMessageSpeechUpdate.Role;
    /** This is the turn number of the speech update (0-indexed). */
    turn?: number;
    /** This is the timestamp of the message. */
    timestamp?: number;
    /** This is the call that the message is associated with. */
    call?: Vapi.Call;
    /** This is the customer that the message is associated with. */
    customer?: Vapi.CreateCustomerDto;
    /** This is the assistant that the message is associated with. */
    assistant?: Vapi.CreateAssistantDto;
}
export declare namespace ClientMessageSpeechUpdate {
    /**
     * This is the phone number that the message is associated with.
     */
    type PhoneNumber = Vapi.CreateByoPhoneNumberDto | Vapi.CreateTwilioPhoneNumberDto | Vapi.CreateVonagePhoneNumberDto | Vapi.CreateVapiPhoneNumberDto | Vapi.CreateTelnyxPhoneNumberDto;
    /**
     * This is the status of the speech update.
     */
    type Status = "started" | "stopped";
    const Status: {
        readonly Started: "started";
        readonly Stopped: "stopped";
    };
    /**
     * This is the role which the speech update is for.
     */
    type Role = "assistant" | "user";
    const Role: {
        readonly Assistant: "assistant";
        readonly User: "user";
    };
}
