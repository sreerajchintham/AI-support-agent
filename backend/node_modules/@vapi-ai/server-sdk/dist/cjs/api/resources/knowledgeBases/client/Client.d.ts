/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments.js";
import * as core from "../../../../core/index.js";
import * as Vapi from "../../../index.js";
export declare namespace KnowledgeBases {
    interface Options {
        environment?: core.Supplier<environments.VapiEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token: core.Supplier<core.BearerToken>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}
export declare class KnowledgeBases {
    protected readonly _options: KnowledgeBases.Options;
    constructor(_options: KnowledgeBases.Options);
    /**
     * @param {Vapi.KnowledgeBasesListRequest} request
     * @param {KnowledgeBases.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.knowledgeBases.list()
     */
    list(request?: Vapi.KnowledgeBasesListRequest, requestOptions?: KnowledgeBases.RequestOptions): core.HttpResponsePromise<Vapi.KnowledgeBasesListResponseItem[]>;
    private __list;
    /**
     * @param {Vapi.KnowledgeBasesCreateRequest} request
     * @param {KnowledgeBases.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.knowledgeBases.create({
     *         provider: "trieve"
     *     })
     */
    create(request: Vapi.KnowledgeBasesCreateRequest, requestOptions?: KnowledgeBases.RequestOptions): core.HttpResponsePromise<Vapi.KnowledgeBasesCreateResponse>;
    private __create;
    /**
     * @param {string} id
     * @param {KnowledgeBases.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.knowledgeBases.get("id")
     */
    get(id: string, requestOptions?: KnowledgeBases.RequestOptions): core.HttpResponsePromise<Vapi.KnowledgeBasesGetResponse>;
    private __get;
    /**
     * @param {string} id
     * @param {KnowledgeBases.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.knowledgeBases.delete("id")
     */
    delete(id: string, requestOptions?: KnowledgeBases.RequestOptions): core.HttpResponsePromise<Vapi.KnowledgeBasesDeleteResponse>;
    private __delete;
    /**
     * @param {string} id
     * @param {Vapi.KnowledgeBasesUpdateRequest} request
     * @param {KnowledgeBases.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.knowledgeBases.update("id", {})
     */
    update(id: string, request: Vapi.KnowledgeBasesUpdateRequest, requestOptions?: KnowledgeBases.RequestOptions): core.HttpResponsePromise<Vapi.KnowledgeBasesUpdateResponse>;
    private __update;
    protected _getAuthorizationHeader(): Promise<string>;
}
