/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Vapi from "../../../../index.js";
/**
 * @example
 *     {}
 */
export interface CreateSessionDto {
    /** This is a user-defined name for the session. Maximum length is 40 characters. */
    name?: string;
    /** This is the current status of the session. Can be either 'active' or 'completed'. */
    status?: CreateSessionDto.Status;
    /** Session expiration time in seconds. Defaults to 24 hours (86400 seconds) if not set. */
    expirationSeconds?: number;
    /** This is the ID of the assistant associated with this session. Use this when referencing an existing assistant. */
    assistantId?: string;
    /**
     * This is the assistant configuration for this session. Use this when creating a new assistant configuration.
     * If assistantId is provided, this will be ignored.
     */
    assistant?: Vapi.CreateAssistantDto;
    /** This is an array of chat messages in the session. */
    messages?: CreateSessionDto.Messages.Item[];
    /** This is the customer information associated with this session. */
    customer?: Vapi.CreateCustomerDto;
    /** This is the ID of the phone number associated with this session. */
    phoneNumberId?: string;
    /** This is the phone number configuration for this session. */
    phoneNumber?: Vapi.ImportTwilioPhoneNumberDto;
}
export declare namespace CreateSessionDto {
    /**
     * This is the current status of the session. Can be either 'active' or 'completed'.
     */
    type Status = "active" | "completed";
    const Status: {
        readonly Active: "active";
        readonly Completed: "completed";
    };
    type Messages = Messages.Item[];
    namespace Messages {
        type Item = Vapi.SystemMessage | Vapi.UserMessage | Vapi.AssistantMessage | Vapi.ToolMessage | Vapi.DeveloperMessage;
    }
}
