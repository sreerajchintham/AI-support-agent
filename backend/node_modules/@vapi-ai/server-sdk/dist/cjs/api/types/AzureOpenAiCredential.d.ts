/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface AzureOpenAiCredential {
    provider: "azure-openai";
    region: AzureOpenAiCredential.Region;
    models: AzureOpenAiCredential.Models.Item[];
    /** This is not returned in the API. */
    openAIKey: string;
    /** This is not returned in the API. */
    ocpApimSubscriptionKey?: string;
    /** This is the unique identifier for the credential. */
    id: string;
    /** This is the unique identifier for the org that this credential belongs to. */
    orgId: string;
    /** This is the ISO 8601 date-time string of when the credential was created. */
    createdAt: string;
    /** This is the ISO 8601 date-time string of when the assistant was last updated. */
    updatedAt: string;
    /** This is the name of credential. This is just for your reference. */
    name?: string;
    openAIEndpoint: string;
}
export declare namespace AzureOpenAiCredential {
    type Region = "australia" | "canadaeast" | "canadacentral" | "eastus2" | "eastus" | "france" | "india" | "japaneast" | "japanwest" | "uaenorth" | "northcentralus" | "norway" | "southcentralus" | "swedencentral" | "switzerland" | "uk" | "westus" | "westus3";
    const Region: {
        readonly Australia: "australia";
        readonly Canadaeast: "canadaeast";
        readonly Canadacentral: "canadacentral";
        readonly Eastus2: "eastus2";
        readonly Eastus: "eastus";
        readonly France: "france";
        readonly India: "india";
        readonly Japaneast: "japaneast";
        readonly Japanwest: "japanwest";
        readonly Uaenorth: "uaenorth";
        readonly Northcentralus: "northcentralus";
        readonly Norway: "norway";
        readonly Southcentralus: "southcentralus";
        readonly Swedencentral: "swedencentral";
        readonly Switzerland: "switzerland";
        readonly Uk: "uk";
        readonly Westus: "westus";
        readonly Westus3: "westus3";
    };
    type Models = Models.Item[];
    namespace Models {
        type Item = "gpt-4.1-2025-04-14" | "gpt-4.1-mini-2025-04-14" | "gpt-4.1-nano-2025-04-14" | "gpt-4o-2024-11-20" | "gpt-4o-2024-08-06" | "gpt-4o-2024-05-13" | "gpt-4o-mini-2024-07-18" | "gpt-4-turbo-2024-04-09" | "gpt-4-0125-preview" | "gpt-4-1106-preview" | "gpt-4-0613" | "gpt-35-turbo-0125" | "gpt-35-turbo-1106";
        const Item: {
            readonly Gpt4120250414: "gpt-4.1-2025-04-14";
            readonly Gpt41Mini20250414: "gpt-4.1-mini-2025-04-14";
            readonly Gpt41Nano20250414: "gpt-4.1-nano-2025-04-14";
            readonly Gpt4O20241120: "gpt-4o-2024-11-20";
            readonly Gpt4O20240806: "gpt-4o-2024-08-06";
            readonly Gpt4O20240513: "gpt-4o-2024-05-13";
            readonly Gpt4OMini20240718: "gpt-4o-mini-2024-07-18";
            readonly Gpt4Turbo20240409: "gpt-4-turbo-2024-04-09";
            readonly Gpt40125Preview: "gpt-4-0125-preview";
            readonly Gpt41106Preview: "gpt-4-1106-preview";
            readonly Gpt40613: "gpt-4-0613";
            readonly Gpt35Turbo0125: "gpt-35-turbo-0125";
            readonly Gpt35Turbo1106: "gpt-35-turbo-1106";
        };
    }
}
