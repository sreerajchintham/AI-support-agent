/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Vapi from "../index.js";
export interface Campaign {
    /** This is the status of the campaign. */
    status: Campaign.Status;
    /** This is the explanation for how the campaign ended. */
    endedReason?: Campaign.EndedReason;
    /** This is the name of the campaign. This is just for your own reference. */
    name: string;
    /** This is the assistant ID that will be used for the campaign calls. Note: Either assistantId or workflowId can be used, but not both. */
    assistantId?: string;
    /** This is the workflow ID that will be used for the campaign calls. Note: Either assistantId or workflowId can be used, but not both. */
    workflowId?: string;
    /** This is the phone number ID that will be used for the campaign calls. */
    phoneNumberId: string;
    /** This is the schedule plan for the campaign. */
    schedulePlan?: Vapi.SchedulePlan;
    /** These are the customers that will be called in the campaign. */
    customers: Vapi.CreateCustomerDto[];
    /** This is the unique identifier for the campaign. */
    id: string;
    /** This is the unique identifier for the org that this campaign belongs to. */
    orgId: string;
    /** This is the ISO 8601 date-time string of when the campaign was created. */
    createdAt: string;
    /** This is the ISO 8601 date-time string of when the campaign was last updated. */
    updatedAt: string;
    /** This is a map of call IDs to campaign call details. */
    calls: Record<string, unknown>;
    /** This is the number of calls that have been scheduled. */
    callsCounterScheduled: number;
    /** This is the number of calls that have been queued. */
    callsCounterQueued: number;
    /** This is the number of calls that have been in progress. */
    callsCounterInProgress: number;
    /** This is the number of calls whose ended reason is 'voicemail'. */
    callsCounterEndedVoicemail: number;
    /** This is the number of calls that have ended. */
    callsCounterEnded: number;
}
export declare namespace Campaign {
    /**
     * This is the status of the campaign.
     */
    type Status = "scheduled" | "in-progress" | "ended";
    const Status: {
        readonly Scheduled: "scheduled";
        readonly InProgress: "in-progress";
        readonly Ended: "ended";
    };
    /**
     * This is the explanation for how the campaign ended.
     */
    type EndedReason = "campaign.scheduled.ended-by-user" | "campaign.in-progress.ended-by-user" | "campaign.ended.success";
    const EndedReason: {
        readonly CampaignScheduledEndedByUser: "campaign.scheduled.ended-by-user";
        readonly CampaignInProgressEndedByUser: "campaign.in-progress.ended-by-user";
        readonly CampaignEndedSuccess: "campaign.ended.success";
    };
}
