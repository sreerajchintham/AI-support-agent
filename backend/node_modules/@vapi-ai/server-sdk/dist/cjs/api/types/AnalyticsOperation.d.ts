/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface AnalyticsOperation {
    /** This is the aggregation operation you want to perform. */
    operation: AnalyticsOperation.Operation;
    /** This is the columns you want to perform the aggregation operation on. */
    column: AnalyticsOperation.Column;
    /** This is the alias for column name returned. Defaults to `${operation}${column}`. */
    alias?: string;
}
export declare namespace AnalyticsOperation {
    /**
     * This is the aggregation operation you want to perform.
     */
    type Operation = "sum" | "avg" | "count" | "min" | "max" | "history";
    const Operation: {
        readonly Sum: "sum";
        readonly Avg: "avg";
        readonly Count: "count";
        readonly Min: "min";
        readonly Max: "max";
        readonly History: "history";
    };
    /**
     * This is the columns you want to perform the aggregation operation on.
     */
    type Column = "id" | "cost" | "costBreakdown.llm" | "costBreakdown.stt" | "costBreakdown.tts" | "costBreakdown.vapi" | "costBreakdown.ttsCharacters" | "costBreakdown.llmPromptTokens" | "costBreakdown.llmCompletionTokens" | "duration" | "concurrency" | "minutesUsed";
    const Column: {
        readonly Id: "id";
        readonly Cost: "cost";
        readonly CostBreakdownLlm: "costBreakdown.llm";
        readonly CostBreakdownStt: "costBreakdown.stt";
        readonly CostBreakdownTts: "costBreakdown.tts";
        readonly CostBreakdownVapi: "costBreakdown.vapi";
        readonly CostBreakdownTtsCharacters: "costBreakdown.ttsCharacters";
        readonly CostBreakdownLlmPromptTokens: "costBreakdown.llmPromptTokens";
        readonly CostBreakdownLlmCompletionTokens: "costBreakdown.llmCompletionTokens";
        readonly Duration: "duration";
        readonly Concurrency: "concurrency";
        readonly MinutesUsed: "minutesUsed";
    };
}
